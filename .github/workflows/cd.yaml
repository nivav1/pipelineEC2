name: Deploy to EC2

on:
  push:
    branches:
      - main  # Trigger deployment on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up SSH connection
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$EC2_SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          echo "EC2 Host: $EC2_HOST"
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "$EC2_HOST" >> ~/.ssh/known_hosts

      - name: Install Docker on EC2
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            sudo apt-get update
            sudo apt-get install -y docker.io docker-compose
            sudo systemctl start docker
            sudo systemctl enable docker
          EOF

      - name: Pull latest docker-compose from GitHub
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            rm -rf ~/my-app
            git clone https://github.com/nivav1/pipelineEC2.git ~/my-app
          EOF

      - name: Deploy with Docker Compose
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd ~/my-app
            echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            docker compose down
            docker compose pull
            docker compose up -d
          EOF

      - name: Cleanup
        run: rm -rf ~/.ssh
